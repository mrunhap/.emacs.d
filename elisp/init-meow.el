;;; -*- lexical-binding: t -*-
(defun meow-setup ()
  (setq meow-cheatsheet-layout meow-cheatsheet-layout-qwerty)
  (meow-motion-overwrite-define-key
   '("j" . meow-next)
   '("k" . meow-prev))
  (meow-leader-define-key
   '("p f" . project-find-file)
   '("o" . ace-window)
   '("." . xref-find-definitions)
   '("," . xref-pop-marker-stack)
   '("?" . xref-find-references)
   '("SPC" . counsel-M-x)
   ;; SPC j/k will run the original command in MOTION state.
   '("j" . meow-motion-origin-command)
   '("k" . meow-motion-origin-command)
   ;; Use SPC (0-9) for digit arguments.
   '("1" . meow-digit-argument)
   '("2" . meow-digit-argument)
   '("3" . meow-digit-argument)
   '("4" . meow-digit-argument)
   '("5" . meow-digit-argument)
   '("6" . meow-digit-argument)
   '("7" . meow-digit-argument)
   '("8" . meow-digit-argument)
   '("9" . meow-digit-argument)
   '("0" . meow-digit-argument))
  (meow-normal-define-key
   '("0" . meow-expand-0)
   '("9" . meow-expand-9)
   '("8" . meow-expand-8)
   '("7" . meow-expand-7)
   '("6" . meow-expand-6)
   '("5" . meow-expand-5)
   '("4" . meow-expand-4)
   '("3" . meow-expand-3)
   '("2" . meow-expand-2)
   '("1" . meow-expand-1)
   '("-" . negative-argument)
   '(";" . meow-reverse)
   '("," . meow-inner-of-thing)
   '("." . meow-bounds-of-thing)
   '("[" . meow-beginning-of-thing)
   '("]" . meow-end-of-thing)
   '("a" . meow-append)
   '("A" . meow-open-below)
   '("b" . meow-back-word)
   '("B" . meow-back-symbol)
   '("c" . meow-change)
   '("C" . meow-change-save)
;;   '("d" . meow-delete)
   '("d" . meow-kill)
;;   '("x" . meow-line)
   '("x" . meow-delete)
   '("f" . meow-find)
   '("F" . meow-find-expand)
   '("g" . meow-keyboard-quit)
   '("G" . goto-line)
   '("h" . meow-head)
   '("H" . meow-head-expand)
   '("i" . meow-insert)
   '("I" . meow-open-above)
;;   '("m" . meow-join)
   '("m" . meow-mark-word)
;;   '("M" . delete-indentation)
   '("M" . meow-mark-symbol)
;;   '("s" . meow-kill)
   '("s" . meow-line)
   '("t" . meow-till)
   '("T" . meow-till-expand)
;;   '("w" . meow-mark-word)
   '("w" . meow-next-word)
;;   '("W" . meow-mark-symbol)
   '("W" . meow-next-symbol)
   '("j" . meow-next)
   '("J" . meow-next-expand)
   '("o" . meow-block)
   '("O" . meow-block-expand)
   '("k" . meow-prev)
   '("K" . meow-prev-expand)
   '("q" . meow-quit)
   '("r" . meow-replace)
   '("R" . meow-replace-save)
   '("n" . meow-search)
   '("N" . meow-pop-search)
   '("l" . meow-tail)
   '("L" . meow-tail-expand)
   '("u" . undo)
   '("U" . undo-redo)
   '("v" . meow-visit)
;;   '("e" . meow-next-word)
   '("e" . meow-join)
;;   '("E" . meow-next-symbol)
   '("E" . delete-indentation)
   '("y" . meow-save)
   '("p" . meow-yank)
   '("z" . meow-pop-selection)
   '("Z" . meow-pop-all-selection)
   '("?" . meow-cheatsheet)
   '("&" . meow-query-replace)
   '("%" . meow-query-replace-regexp)
   '("<escape>" . meow-last-buffer)))

(use-package meow
  :straight
  (meow :type git
	    :host github
	    :repo "DogLooksGood/meow")
  :init
  (meow-global-mode 1)
  :config
  (meow-setup-line-number)
  (meow-setup))

(provide 'init-meow)
